import{combine}from"effector";export function createCombineValidator(a){return(b,c,d)=>{const e=[],f="function"==typeof a?a(b,c):a;for(const[a,g]of f.entries()){const f=d?d[a]:null,h=g.validator(b,c,f);"boolean"!=typeof h||h||e.push({rule:g.name,errorText:g.errorText,value:b}),"object"!=typeof h||h.isValid||e.push({rule:g.name,errorText:h.errorText,value:b})}return e}}export function eachValid(a){const b=[];for(const c in a){if(!a.hasOwnProperty(c))continue;const{$firstError:d}=a[c];b.push(d)}const c=combine(b);return c.map(a=>a.every(a=>null===a))}