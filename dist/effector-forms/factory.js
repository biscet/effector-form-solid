import{combine,sample}from"effector";import{eachValid}from"./validation";import{createField,bindValidation,bindChangeEvent}from"./field";import{createFormUnit}from"./create-form-unit";function createFormValuesStore(a){const b={};for(const c in a)a.hasOwnProperty(c)&&(b[c]=a[c].$value);return combine(b)}export function createForm(a){const{filter:b,domain:c,fields:d,validateOn:e,units:f}=a,g={},h=[],i=[];for(const b in d){if(!d.hasOwnProperty(b))continue;const a=d[b],e=createField(b,a,c);g[b]=e,h.push(e.$isDirty),i.push(e.$touched)}const j=createFormValuesStore(g),k=eachValid(g),l=b?combine(k,b,(a,b)=>a&&b):k,m=combine(h).map(a=>a.some(Boolean)),n=combine(i).map(a=>a.some(Boolean)),o=combine({isValid:k,isDirty:m,touched:n}),p=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.validate}),q=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.submit}),r=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.formValidated}),s=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.setInitialForm}),t=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.setForm}),u=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.addErrors}),v=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.reset}),w=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.resetValues}),x=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.resetErrors}),y=createFormUnit.event({domain:c,existing:null===f||void 0===f?void 0:f.resetTouched}),z=sample({source:j,clock:q}),A=sample({source:j,clock:p});for(const b in g){if(!g.hasOwnProperty(b))continue;const a=d[b],c=g[b];bindChangeEvent({form:{setForm:t,setInitialForm:s,resetForm:v,resetTouched:y,resetValues:w},field:c}),bindValidation({form:{$values:j,submit:q,reset:v,addErrors:u,resetValues:w,resetErrors:x,validate:p,validateOn:e},fieldConfig:a,field:c},{sid:b})}sample({source:z,filter:l,// TODO: fix
target:r}),sample({source:A,filter:l,target:r});const B={isValid:k,isDirty:m,touched:n,submit:q,reset:v,addErrors:u,validate:p,setForm:t,setInitialForm:s,resetTouched:y,resetValues:w,resetErrors:x,formValidated:r};return{fields:g,$values:j,$eachValid:k,$isValid:k,$isDirty:m,$touched:n,$meta:o,submit:q,validate:p,resetTouched:y,addErrors:u,reset:v,resetValues:w,resetErrors:x,setForm:t,setInitialForm:s,set:t,formValidated:r,"@@unitShape":()=>B}}