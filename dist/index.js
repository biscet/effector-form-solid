import{combine as e,createStore as r,createEvent as t,sample as i,merge as o}from"effector";import{useUnit as s}from"effector-solid";const n={store:function({init:a,domain:b,existing:c},d){return c||(b?b.createStore(a,d):r(a,d))},event:function({domain:a,existing:b}){return b||(a?a.createEvent():t())}};function l(q,r,t){var i,z,A,G,H,J,K,L,M,N,Q,R;const U="function"==typeof r.init?r.init():r.init,g=n.store({domain:t,existing:null===(i=r.units)||void 0===i?void 0:i.$value,init:U},{sid:`${q}-$value`}),x=n.store({domain:t,existing:null===(z=r.units)||void 0===z?void 0:z.$errors,init:[]},{sid:`${q}-$errors`}),p=x.map(a=>a[0]?a[0]:null),V=n.store({domain:t,existing:null===(A=r.units)||void 0===A?void 0:A.$initValue,init:U},{sid:`${q}-$initValue`}),E=n.store({domain:t,existing:null===(G=r.units)||void 0===G?void 0:G.$isTouched,init:!1},{sid:`${q}-$touched`}),y=e(g,V,(a,b)=>a!==b),T=n.event({domain:t,existing:null===(H=r.units)||void 0===H?void 0:H.onChange}),b=n.event({domain:t,existing:null===(J=r.units)||void 0===J?void 0:J.onBlur}),F=n.event({domain:t,existing:null===(K=r.units)||void 0===K?void 0:K.changed}),O=n.event({domain:t,existing:null===(L=r.units)||void 0===L?void 0:L.addError}),S=n.event({domain:t,existing:null===(M=r.units)||void 0===M?void 0:M.validate}),k=n.event({domain:t,existing:null===(N=r.units)||void 0===N?void 0:N.resetErrors}),w=n.event({domain:t,existing:null===(Q=r.units)||void 0===Q?void 0:Q.resetValue}),D=n.event({domain:t,existing:null===(R=r.units)||void 0===R?void 0:R.reset}),B=p.map(a=>null===a),C=p.map(a=>(null==a?void 0:a.errorText)||""),P=e({value:g,errors:x,firstError:p,isValid:B,isDirty:y,isTouched:E}),I={value:g,initValue:V,isValid:B,isDirty:y,touched:E,errors:x,firstError:p,errorText:C,onChange:T,onBlur:b,addError:O,validate:S,reset:D,resetErrors:k,resetValue:w};return{changed:F,name:q,$initValue:V,$value:g,$errors:x,$firstError:p,$errorText:C,$isValid:B,$isDirty:y,$isTouched:E,$touched:E,$field:P,onChange:T,onBlur:b,addError:O,validate:S,set:T,reset:D,resetErrors:k,resetValue:w,filter:r.filter,"@@unitShape":()=>I}}function u(j){const{form:k,field:q,fieldConfig:n}=j,l=n.rules||[],s=k.validateOn||["submit"],a=n.validateOn||[],{$value:d,$errors:c,onBlur:t,changed:f,addError:m,validate:h,resetErrors:u,resetValue:g,reset:v}=q,p="function"==typeof l?r([],{sid:`${q.name}-$rulesSources`}):e(l.map(({source:a},b)=>{const c=`${q.name}-$rulesSources-${b}`;return a||r(null,{sid:c})})),w=(x=l,(a,b,c)=>{const d=[],e="function"==typeof x?x(a,b):x;for(const[f,g]of e.entries()){const e=c?c[f]:null,h=g.validator(a,b,e);"boolean"!=typeof h||h||d.push({rule:g.name,errorText:g.errorText,value:a}),"object"!=typeof h||h.isValid||d.push({rule:g.name,errorText:h.errorText,value:a})}return d});var x;const z=new Set([...s,...a]),A=[];if(z.has("submit")){const a=i({source:e({fieldValue:d,form:k.$values,rulesSources:p}),clock:k.submit});A.push(a)}z.has("blur")&&A.push(i({source:e({fieldValue:d,form:k.$values,rulesSources:p}),clock:t})),z.has("change")&&A.push(i({source:e({fieldValue:d,form:k.$values,rulesSources:p}),clock:o([f,g,k.resetValues])})),A.push(i({source:e({fieldValue:d,form:k.$values,rulesSources:p}),clock:h})),A.push(i({source:e({fieldValue:d,form:k.$values,rulesSources:p}),clock:k.validate}));const b=i({source:d,clock:m,fn:(a,{rule:b,errorText:c})=>({rule:b,value:a,errorText:c})}),B=i({source:d,clock:k.addErrors,fn:(a,b)=>({value:a,newErrors:b})});c.on(A,(a,{form:b,fieldValue:c,rulesSources:d})=>w(c,b,d)).on(b,(a,b)=>[b,...a]).on(B,(a,{value:b,newErrors:c})=>{const d=[];for(const f of c)f.field===q.name&&d.push({value:b,rule:f.rule,errorText:f.errorText});return[...d,...a]}).reset(u,k.reset,v,k.resetErrors),z.has("change")||c.reset(f)}function a({field:b,form:e}){const{$value:j,$initValue:k,$touched:p,onChange:n,changed:l,name:q,reset:a,resetValue:d,filter:c}=b,{setForm:r,setInitialForm:f,resetForm:m,resetTouched:h,resetValues:s}=e,g=i({source:k,clock:o([a,d,s,m])});p.on(l,()=>!0).reset(a,m,h),i(c?{source:n,filter:c,target:l}:{source:n,filter:()=>!0,target:l}),k.on(f,(a,b)=>b.hasOwnProperty(q)?b[q]:a),j.on(l,(a,b)=>b).on([r,f],(a,b)=>b.hasOwnProperty(q)?b[q]:a).on(g,(a,b)=>b)}function d(j){const{filter:q,domain:t,fields:o,validateOn:s,units:d}=j,c={},v=[],f=[];for(const a in o){if(!o.hasOwnProperty(a))continue;const b=l(a,o[a],t);c[a]=b,v.push(b.$isDirty),f.push(b.$touched)}const m=function(a){const b={};for(const c in a)a.hasOwnProperty(c)&&(b[c]=a[c].$value);return e(b)}(c),h=function(a){const b=[];for(const c in a){if(!a.hasOwnProperty(c))continue;const{$firstError:d}=a[c];b.push(d)}return e(b).map(a=>a.every(a=>null===a))}(c),r=q?e(h,q,(a,b)=>a&&b):h,g=e(v).map(a=>a.some(Boolean)),x=e(f).map(a=>a.some(Boolean)),p=e({isValid:h,isDirty:g,touched:x}),z=n.event({domain:t,existing:null==d?void 0:d.validate}),A=n.event({domain:t,existing:null==d?void 0:d.submit}),y=n.event({domain:t,existing:null==d?void 0:d.formValidated}),E=n.event({domain:t,existing:null==d?void 0:d.setInitialForm}),b=n.event({domain:t,existing:null==d?void 0:d.setForm}),F=n.event({domain:t,existing:null==d?void 0:d.addErrors}),G=n.event({domain:t,existing:null==d?void 0:d.reset}),H=n.event({domain:t,existing:null==d?void 0:d.resetValues}),k=n.event({domain:t,existing:null==d?void 0:d.resetErrors}),w=n.event({domain:t,existing:null==d?void 0:d.resetTouched}),D=i({source:m,clock:A}),B=i({source:m,clock:z});for(const d in c){if(!c.hasOwnProperty(d))continue;const e=o[d],f=c[d];a({form:{setForm:b,setInitialForm:E,resetForm:G,resetTouched:w,resetValues:H},field:f}),u({form:{$values:m,submit:A,reset:G,addErrors:F,resetValues:H,resetErrors:k,validate:z,validateOn:s},fieldConfig:e,field:f})}i({source:D,filter:r,target:y}),i({source:B,filter:r,target:y});const C={isValid:h,isDirty:g,touched:x,submit:A,reset:G,addErrors:F,validate:z,setForm:b,setInitialForm:E,resetTouched:w,resetValues:H,resetErrors:k,formValidated:y};return{fields:c,$values:m,$eachValid:h,$isValid:h,$isDirty:g,$touched:x,$meta:p,submit:A,validate:z,resetTouched:w,addErrors:F,reset:G,resetValues:H,resetErrors:k,setForm:b,setInitialForm:E,set:b,formValidated:y,"@@unitShape":()=>C}}const c=(a,b)=>{const c=s(a),d=s(a.$values);let e={};var f;return f=b,[Object,Array].includes((f||{}).constructor)&&0===Object.entries(f||{}).length||b.forEach(b=>{e={...e,[b]:s(a.fields[b])}}),{...c,fields:a.fields,sumbit:a=>{a.preventDefault(),c.submit()},values:d,signalValues:e}};export{d as createForm,c as useForm};