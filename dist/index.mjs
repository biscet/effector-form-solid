import{combine as e,sample as r,createStore as t,createEvent as i,merge as o}from"effector";import{useUnit as s}from"effector-solid";const n={store:function({init:e,domain:r,existing:i},o){return i||(r?r.createStore(e,o):t(e,o))},event:function({domain:e,existing:r}){return r||(e?e.createEvent():i())}};function l(r,t,i){var o,s,l,u,a,d,c,v,f,m,h,$;const g="function"==typeof t.init?t.init():t.init,x=n.store({domain:i,existing:null===(o=t.units)||void 0===o?void 0:o.$value,init:g},{sid:`${r}-$value`}),p=n.store({domain:i,existing:null===(s=t.units)||void 0===s?void 0:s.$errors,init:[]},{sid:`${r}-$errors`}),V=p.map((e=>e[0]?e[0]:null)),E=n.store({domain:i,existing:null===(l=t.units)||void 0===l?void 0:l.$initValue,init:g},{sid:`${r}-$initValue`}),y=n.store({domain:i,existing:null===(u=t.units)||void 0===u?void 0:u.$isTouched,init:!1},{sid:`${r}-$touched`}),T=e(x,E,((e,r)=>e!==r)),b=n.event({domain:i,existing:null===(a=t.units)||void 0===a?void 0:a.onChange}),F=n.event({domain:i,existing:null===(d=t.units)||void 0===d?void 0:d.onBlur}),O=n.event({domain:i,existing:null===(c=t.units)||void 0===c?void 0:c.changed}),S=n.event({domain:i,existing:null===(v=t.units)||void 0===v?void 0:v.addError}),k=n.event({domain:i,existing:null===(f=t.units)||void 0===f?void 0:f.validate}),w=n.event({domain:i,existing:null===(m=t.units)||void 0===m?void 0:m.resetErrors}),D=n.event({domain:i,existing:null===(h=t.units)||void 0===h?void 0:h.resetValue}),B=n.event({domain:i,existing:null===($=t.units)||void 0===$?void 0:$.reset}),C=V.map((e=>null===e)),P=V.map((e=>(null==e?void 0:e.errorText)||"")),I=e({value:x,errors:p,firstError:V,isValid:C,isDirty:T,isTouched:y}),j={value:x,initValue:E,isValid:C,isDirty:T,touched:y,errors:p,firstError:V,errorText:P,onChange:b,onBlur:F,addError:S,validate:k,reset:B,resetErrors:w,resetValue:D};return{changed:O,name:r,$initValue:E,$value:x,$errors:p,$firstError:V,$errorText:P,$isValid:C,$isDirty:T,$isTouched:y,$touched:y,$field:I,onChange:b,onBlur:F,addError:S,validate:k,set:b,reset:B,resetErrors:w,resetValue:D,filter:t.filter,"@@unitShape":()=>j}}function u(i){const{form:s,field:n,fieldConfig:l}=i,u=l.rules||[],a=s.validateOn||["submit"],d=l.validateOn||[],{$value:c,$errors:v,onBlur:f,changed:m,addError:h,validate:$,resetErrors:g,resetValue:x,reset:p}=n,V="function"==typeof u?t([],{sid:`${n.name}-$rulesSources`}):e(u.map((({source:e},r)=>{const i=`${n.name}-$rulesSources-${r}`;return e||t(null,{sid:i})}))),E=(y=u,(e,r,t)=>{const i=[],o="function"==typeof y?y(e,r):y;for(const[s,n]of o.entries()){const o=t?t[s]:null,l=n.validator(e,r,o);"boolean"!=typeof l||l||i.push({rule:n.name,errorText:n.errorText,value:e}),"object"!=typeof l||l.isValid||i.push({rule:n.name,errorText:l.errorText,value:e})}return i});var y;const T=new Set([...a,...d]),b=[];if(T.has("submit")){const t=r({source:e({fieldValue:c,form:s.$values,rulesSources:V}),clock:s.submit});b.push(t)}T.has("blur")&&b.push(r({source:e({fieldValue:c,form:s.$values,rulesSources:V}),clock:f})),T.has("change")&&b.push(r({source:e({fieldValue:c,form:s.$values,rulesSources:V}),clock:o([m,x,s.resetValues])})),b.push(r({source:e({fieldValue:c,form:s.$values,rulesSources:V}),clock:$})),b.push(r({source:e({fieldValue:c,form:s.$values,rulesSources:V}),clock:s.validate}));const F=r({source:c,clock:h,fn:(e,{rule:r,errorText:t})=>({rule:r,value:e,errorText:t})}),O=r({source:c,clock:s.addErrors,fn:(e,r)=>({value:e,newErrors:r})});v.on(b,((e,{form:r,fieldValue:t,rulesSources:i})=>E(t,r,i))).on(F,((e,r)=>[r,...e])).on(O,((e,{value:r,newErrors:t})=>{const i=[];for(const e of t)e.field===n.name&&i.push({value:r,rule:e.rule,errorText:e.errorText});return[...i,...e]})).reset(g,s.reset,p,s.resetErrors),T.has("change")||v.reset(m)}function a({field:e,form:t}){const{$value:i,$initValue:s,$touched:n,onChange:l,changed:u,name:a,reset:d,resetValue:c,filter:v}=e,{setForm:f,setInitialForm:m,resetForm:h,resetTouched:$,resetValues:g}=t,x=r({source:s,clock:o([d,c,g,h])});n.on(u,(()=>!0)).reset(d,h,$),r(v?{source:l,filter:v,target:u}:{source:l,filter:()=>!0,target:u}),s.on(m,((e,r)=>r.hasOwnProperty(a)?r[a]:e)),i.on(u,((e,r)=>r)).on([f,m],((e,r)=>r.hasOwnProperty(a)?r[a]:e)).on(x,((e,r)=>r))}function d(t){const{filter:i,domain:o,fields:s,validateOn:d,units:c}=t,v={},f=[],m=[];for(const e in s){if(!s.hasOwnProperty(e))continue;const r=l(e,s[e],o);v[e]=r,f.push(r.$isDirty),m.push(r.$touched)}const h=function(r){const t={};for(const e in r)r.hasOwnProperty(e)&&(t[e]=r[e].$value);return e(t)}(v),$=function(r){const t=[];for(const e in r){if(!r.hasOwnProperty(e))continue;const{$firstError:i}=r[e];t.push(i)}return e(t).map((e=>e.every((e=>null===e))))}(v),g=i?e($,i,((e,r)=>e&&r)):$,x=e(f).map((e=>e.some(Boolean))),p=e(m).map((e=>e.some(Boolean))),V=e({isValid:$,isDirty:x,touched:p}),E=n.event({domain:o,existing:null==c?void 0:c.validate}),y=n.event({domain:o,existing:null==c?void 0:c.submit}),T=n.event({domain:o,existing:null==c?void 0:c.formValidated}),b=n.event({domain:o,existing:null==c?void 0:c.setInitialForm}),F=n.event({domain:o,existing:null==c?void 0:c.setForm}),O=n.event({domain:o,existing:null==c?void 0:c.addErrors}),S=n.event({domain:o,existing:null==c?void 0:c.reset}),k=n.event({domain:o,existing:null==c?void 0:c.resetValues}),w=n.event({domain:o,existing:null==c?void 0:c.resetErrors}),D=n.event({domain:o,existing:null==c?void 0:c.resetTouched}),B=r({source:h,clock:y}),C=r({source:h,clock:E});for(const e in v){if(!v.hasOwnProperty(e))continue;const r=s[e],t=v[e];a({form:{setForm:F,setInitialForm:b,resetForm:S,resetTouched:D,resetValues:k},field:t}),u({form:{$values:h,submit:y,reset:S,addErrors:O,resetValues:k,resetErrors:w,validate:E,validateOn:d},fieldConfig:r,field:t})}r({source:B,filter:g,target:T}),r({source:C,filter:g,target:T});const P={isValid:$,isDirty:x,touched:p,submit:y,reset:S,addErrors:O,validate:E,setForm:F,setInitialForm:b,resetTouched:D,resetValues:k,resetErrors:w,formValidated:T};return{fields:v,$values:h,$eachValid:$,$isValid:$,$isDirty:x,$touched:p,$meta:V,submit:y,validate:E,resetTouched:D,addErrors:O,reset:S,resetValues:k,resetErrors:w,setForm:F,setInitialForm:b,set:F,formValidated:T,"@@unitShape":()=>P}}const c=(e,r)=>{const t=s(e),i=s(e.$values);let o={};var n;return n=r,[Object,Array].includes((n||{}).constructor)&&0===Object.entries(n||{}).length||r.forEach((r=>{o={...o,[r]:s(e.fields[r])}})),{...t,fields:e.fields,sumbit:e=>{e.preventDefault(),t.submit()},values:i,signalValues:o}};export{d as createForm,c as useForm};
//# sourceMappingURL=index.mjs.map
